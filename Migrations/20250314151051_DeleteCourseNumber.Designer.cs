// <auto-generated />
using System;
using DigitalPortalAcademy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalPortalAcademy.Migrations
{
    [DbContext(typeof(AcademyContext))]
    [Migration("20250314151051_DeleteCourseNumber")]
    partial class DeleteCourseNumber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalPortalAcademy.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnnouncementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AnnouncementId")
                        .HasName("PK__Announce__9DE44554F436F3E2");

                    b.HasIndex("AuthorId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BuildingId")
                        .HasName("PK__Building__5463CDE43027C05E");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.ClassType", b =>
                {
                    b.Property<int>("ClassTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClassTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassTypeId"));

                    b.Property<string>("ClassTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassTypeId")
                        .HasName("PK__ClassTyp__9AB2129327A9BCD3");

                    b.HasIndex(new[] { "ClassTypeName" }, "UQ__ClassTyp__184FD14328FBF07C")
                        .IsUnique();

                    b.ToTable("ClassTypes");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurriculumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculumId"));

                    b.Property<string>("PlanFilePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.Property<int>("StudyYear")
                        .HasColumnType("int");

                    b.HasKey("CurriculumId")
                        .HasName("PK__Curricul__06C9FA7C2F47DBC0");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.CycleCommission", b =>
                {
                    b.Property<int>("CycleCommissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CycleCommissionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CycleCommissionId"));

                    b.Property<string>("CommissionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CycleCommissionId")
                        .HasName("PK__CycleCom__9F8301B2E187801E");

                    b.ToTable("CycleCommissions");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Day", b =>
                {
                    b.Property<int>("DayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DayID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayId"));

                    b.Property<string>("DayName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DayId")
                        .HasName("PK__Days__BF3DD8254089F9F6");

                    b.HasIndex(new[] { "DayName" }, "UQ__Days__04F2C90B79A56CBE")
                        .IsUnique();

                    b.ToTable("Days");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BCDD516880D");

                    b.HasIndex(new[] { "DepartmentName" }, "UQ__Departme__D949CC34DC092056")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonnelNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1609D3FF4");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "WorkEmail" }, "UQ__Employee_A9D10534231CCD59")
                        .IsUnique();

                    b.HasIndex(new[] { "PersonnelNumber" }, "UQ__Employee__EC6A9E5CB58100A9")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("CuratorId")
                        .HasColumnType("int")
                        .HasColumnName("CuratorID");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    b.HasKey("GroupId")
                        .HasName("PK__Groups__149AF30AEE432155");

                    b.HasIndex("CuratorId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.MarksReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PairId")
                        .HasColumnType("int")
                        .HasColumnName("PairID");

                    b.Property<DateOnly>("ReportMonth")
                        .HasColumnType("date");

                    b.HasKey("ReportId")
                        .HasName("PK__MarksRep__D5BD48E571904205");

                    b.HasIndex("PairId");

                    b.ToTable("MarksReports");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.MarksReportDetail", b =>
                {
                    b.Property<int>("ReportDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportDetailId"));

                    b.Property<int?>("Absences")
                        .HasColumnType("int");

                    b.Property<int?>("Mark")
                        .HasColumnType("int");

                    b.Property<int>("ReportId")
                        .HasColumnType("int")
                        .HasColumnName("ReportID");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("ReportDetailId")
                        .HasName("PK__MarksRep__783429E193FA5F18");

                    b.HasIndex("ReportId");

                    b.HasIndex("StudentId");

                    b.ToTable("MarksReportDetails");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Pair", b =>
                {
                    b.Property<int>("PairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PairID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PairId"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<int>("TeacherSubjectId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherSubjectID");

                    b.HasKey("PairId")
                        .HasName("PK__Pairs__B543F62C8ED17802");

                    b.HasIndex("GroupId");

                    b.HasIndex("TeacherSubjectId");

                    b.ToTable("Pairs");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PositionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PositionId")
                        .HasName("PK__Position__60BB9A593FDEDA08");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Name" }, "UQ__Position__737584F6F61E50A3")
                        .IsUnique();

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Role", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolesId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RolesId")
                        .HasName("PK__Roles__C4B278405123492F");

                    b.HasIndex(new[] { "Name" }, "UQ__Roles__737584F6FD469E23")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__32863919B4FAEC51");

                    b.HasIndex("BuildingId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScheduleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("ClassTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ClassTypeID");

                    b.Property<int>("DayId")
                        .HasColumnType("int")
                        .HasColumnName("DayID");

                    b.Property<int>("PairId")
                        .HasColumnType("int")
                        .HasColumnName("PairID");

                    b.Property<int>("RoomId")
                        .HasColumnType("int")
                        .HasColumnName("RoomID");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int")
                        .HasColumnName("TimeSlotID");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B6952D67B72");

                    b.HasIndex("ClassTypeId");

                    b.HasIndex("DayId");

                    b.HasIndex("PairId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtyId"));

                    b.Property<string>("SpecialtyCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SpecialtyId")
                        .HasName("PK__Specialt__D768F64828C54965");

                    b.HasIndex(new[] { "SpecialtyCode" }, "UQ__Specialt__739F5275FB9108B9")
                        .IsUnique()
                        .HasFilter("[SpecialtyCode] IS NOT NULL");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttestatNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersonalEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A798AE9B60E");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "StudentNumber" }, "UQ__Students__A9D10534231CCD58")
                        .IsUnique();

                    b.HasIndex(new[] { "PersonalEmail" }, "UQ__Students__A9D10534231CCD59")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__AC1BA38870F31770");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("CycleCommissionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersonnelNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teachers__EDF25964A0D03982");

                    b.HasIndex("CycleCommissionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "WorkEmail" }, "UQ__Teachers__A9D10534231CCD58")
                        .IsUnique();

                    b.HasIndex(new[] { "PersonnelNumber" }, "UQ__Teachers__EC6A9E5C1A09CCDB")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.TeacherSubject", b =>
                {
                    b.Property<int>("PareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PareId"));

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("PareId")
                        .HasName("PK__TeacherS__609680B0A63A5CBC");

                    b.HasIndex("SubjectId");

                    b.HasIndex(new[] { "TeacherId", "SubjectId" }, "UQ_TeacherSubject")
                        .IsUnique();

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TimeSlotID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("TimeSlotId")
                        .HasName("PK__TimeSlot__41CC1F52C8E6457C");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("~/DigitalPortalAcademy.user.jpg");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC05DABBB5");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Login" }, "UQ__Users__5E55825B45A1EFB3")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Announcement", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.User", "Author")
                        .WithMany("Announcements")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK_Announcements_Author");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curriculum", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Specialty", "Specialty")
                        .WithMany("Curricula")
                        .HasForeignKey("SpecialtyId")
                        .HasConstraintName("FK_Curriculums_Specialty");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Employee", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Position");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Employee_User");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Employee", "Curator")
                        .WithMany("Groups")
                        .HasForeignKey("CuratorId")
                        .IsRequired()
                        .HasConstraintName("FK_Group_Curator");

                    b.HasOne("DigitalPortalAcademy.Models.Specialty", "Specialty")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialtyId")
                        .IsRequired()
                        .HasConstraintName("FK_Group_Specialty");

                    b.Navigation("Curator");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.MarksReport", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Pair", "Pair")
                        .WithMany("MarksReports")
                        .HasForeignKey("PairId")
                        .IsRequired()
                        .HasConstraintName("FK_MarksReport_Pair");

                    b.Navigation("Pair");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.MarksReportDetail", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.MarksReport", "Report")
                        .WithMany("MarksReportDetails")
                        .HasForeignKey("ReportId")
                        .IsRequired()
                        .HasConstraintName("FK_MarksReportDetail_Report");

                    b.HasOne("DigitalPortalAcademy.Models.Student", "Student")
                        .WithMany("MarksReportDetails")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK_MarksReportDetail_Student");

                    b.Navigation("Report");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Pair", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Group", "Group")
                        .WithMany("Pairs")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Pairs_Group");

                    b.HasOne("DigitalPortalAcademy.Models.TeacherSubject", "TeacherSubject")
                        .WithMany("Pairs")
                        .HasForeignKey("TeacherSubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_Pairs_TeacherSubject");

                    b.Navigation("Group");

                    b.Navigation("TeacherSubject");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Position", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Department");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Room", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Room_Building");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Schedule", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.ClassType", "ClassType")
                        .WithMany("Schedules")
                        .HasForeignKey("ClassTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedules_ClassType");

                    b.HasOne("DigitalPortalAcademy.Models.Day", "Day")
                        .WithMany("Schedules")
                        .HasForeignKey("DayId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedules_Day");

                    b.HasOne("DigitalPortalAcademy.Models.Pair", "Pair")
                        .WithMany("Schedules")
                        .HasForeignKey("PairId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedules_Pair");

                    b.HasOne("DigitalPortalAcademy.Models.Room", "Room")
                        .WithMany("Schedules")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedules_Room");

                    b.HasOne("DigitalPortalAcademy.Models.TimeSlot", "TimeSlot")
                        .WithMany("Schedules")
                        .HasForeignKey("TimeSlotId")
                        .IsRequired()
                        .HasConstraintName("FK_Schedules_TimeSlot");

                    b.Navigation("ClassType");

                    b.Navigation("Day");

                    b.Navigation("Pair");

                    b.Navigation("Room");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Student_Group");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Student_User");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Teacher", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.CycleCommission", "CycleCommission")
                        .WithMany("Teachers")
                        .HasForeignKey("CycleCommissionId")
                        .HasConstraintName("FK_Teacher_CycleCommission");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Teachers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Teacher_User");

                    b.Navigation("CycleCommission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.TeacherSubject", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TeacherSubject_Subject");

                    b.HasOne("DigitalPortalAcademy.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TeacherSubject_Teacher");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.User", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.ClassType", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.CycleCommission", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Day", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Department", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Employee", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.Navigation("Pairs");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.MarksReport", b =>
                {
                    b.Navigation("MarksReportDetails");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Pair", b =>
                {
                    b.Navigation("MarksReports");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Position", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Room", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Specialty", b =>
                {
                    b.Navigation("Curricula");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.Navigation("MarksReportDetails");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Subject", b =>
                {
                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Teacher", b =>
                {
                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.TeacherSubject", b =>
                {
                    b.Navigation("Pairs");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.TimeSlot", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Employees");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
