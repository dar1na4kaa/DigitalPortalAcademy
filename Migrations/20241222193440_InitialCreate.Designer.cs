// <auto-generated />
using System;
using DigitalPortalAcademy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalPortalAcademy.Migrations
{
    [DbContext(typeof(DigitalPortalContext))]
    [Migration("20241222193440_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curator", b =>
                {
                    b.Property<int>("CuratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CuratorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuratorId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("CuratorId")
                        .HasName("PK__Curators__FC8BDC7AD72B1E07");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Curators");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curriculum", b =>
                {
                    b.Property<int>("CurriculumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurriculumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculumId"));

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PlanFile")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    b.Property<int?>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("CurriculumId")
                        .HasName("PK__Curricul__06C9FA7CA07706F1");

                    b.HasIndex("SpecialtyId");

                    b.HasIndex("UploadedBy");

                    b.ToTable("Curriculums");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.CycleCommission", b =>
                {
                    b.Property<int>("CycleCommissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CycleCommissionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CycleCommissionId"));

                    b.Property<string>("CommissionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CycleCommissionId")
                        .HasName("PK__CycleCom__9F8301B2DC322E13");

                    b.ToTable("CycleCommissions");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HeadOfDepartment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BCD98B0068E");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<int>("CourseNumber")
                        .HasColumnType("int");

                    b.Property<int>("CuratorId")
                        .HasColumnType("int")
                        .HasColumnName("CuratorID");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    b.HasKey("GroupId")
                        .HasName("PK__Groups__149AF30A27153481");

                    b.HasIndex("CuratorId");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarkID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MarkId"));

                    b.Property<int?>("Absences")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("Mark1")
                        .HasColumnType("int")
                        .HasColumnName("Mark");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasKey("MarkId")
                        .HasName("PK__Marks__4E30D346EF10E840");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpecialtyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialtyId"));

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SpecialtyId")
                        .HasName("PK__Specialt__D768F6485CDEFD27");

                    b.ToTable("Specialties");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttestatNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ParentPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PassportIssuer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52A792E4F2EF3");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__AC1BA38848D7D301");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<int?>("CycleCommissionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("TeacherId")
                        .HasName("PK__Teachers__EDF25944490F7BBF");

                    b.HasIndex("CycleCommissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.UniqueCode", b =>
                {
                    b.Property<int>("UniqueCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UniqueCodeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UniqueCodeId"));

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("UniqueCode1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UniqueCode");

                    b.HasKey("UniqueCodeId")
                        .HasName("PK__UniqueCo__4D0875247BDABA20");

                    b.HasIndex(new[] { "UniqueCode1" }, "UQ__UniqueCo__BB96DE6FDD60D19A")
                        .IsUnique();

                    b.ToTable("UniqueCodes");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhotoPath")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("~/DigitalPortalAcademy.user.jpg");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC902B8927");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105343915BEBC")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectID");

                    b.HasKey("TeacherId", "SubjectId")
                        .HasName("PK__TeacherS__7733E37C151217F6");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects", (string)null);
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curator", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Department", "Department")
                        .WithMany("Curators")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK_Curator_Department");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Curators")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Curator_User");

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curriculum", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Specialty", "Specialty")
                        .WithMany("Curricula")
                        .HasForeignKey("SpecialtyId")
                        .HasConstraintName("FK_Curriculums_Specialty");

                    b.HasOne("DigitalPortalAcademy.Models.User", "UploadedByNavigation")
                        .WithMany("Curricula")
                        .HasForeignKey("UploadedBy")
                        .HasConstraintName("FK_Curriculum_Uploader");

                    b.Navigation("Specialty");

                    b.Navigation("UploadedByNavigation");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Curator", "Curator")
                        .WithMany("Groups")
                        .HasForeignKey("CuratorId")
                        .IsRequired()
                        .HasConstraintName("FK_Group_Curator");

                    b.HasOne("DigitalPortalAcademy.Models.Specialty", "Specialty")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialtyId")
                        .IsRequired()
                        .HasConstraintName("FK_Group_Specialty");

                    b.Navigation("Curator");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Mark", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_Marks_Student");

                    b.HasOne("DigitalPortalAcademy.Models.Subject", "Subject")
                        .WithMany("Marks")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK_Marks_Subject");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK_Student_Group");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Student_User");

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Teacher", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.CycleCommission", "CycleCommission")
                        .WithMany("Teachers")
                        .HasForeignKey("CycleCommissionId")
                        .HasConstraintName("FK_Teacher_CycleCommission");

                    b.HasOne("DigitalPortalAcademy.Models.User", "User")
                        .WithMany("Teachers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Teacher_User");

                    b.Navigation("CycleCommission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeacherSubject", b =>
                {
                    b.HasOne("DigitalPortalAcademy.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK_TeacherSubjects_Subject");

                    b.HasOne("DigitalPortalAcademy.Models.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .IsRequired()
                        .HasConstraintName("FK_TeacherSubjects_Teacher");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Curator", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.CycleCommission", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Department", b =>
                {
                    b.Navigation("Curators");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Specialty", b =>
                {
                    b.Navigation("Curricula");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Student", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.Subject", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("DigitalPortalAcademy.Models.User", b =>
                {
                    b.Navigation("Curators");

                    b.Navigation("Curricula");

                    b.Navigation("Students");

                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
